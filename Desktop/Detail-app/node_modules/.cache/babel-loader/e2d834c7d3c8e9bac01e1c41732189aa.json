{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Zain\\\\Desktop\\\\Detail-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zain\\\\Desktop\\\\Detail-app\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nexport const InfoContext = React.createContext();\nexport const ReadingContext = React.createContext();\n\nconst Index = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        Show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState(\"close\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ShowReading = _useState4[0],\n        setReading = _useState4[1];\n\n  return React.createElement(ReadingContext.Provider, {\n    value: [ShowReading, setReading],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(InfoContext.Provider, {\n    value: [Show, setShow],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\Zain\\Desktop\\Detail-app\\src\\index.js"],"names":["React","useState","ReactDOM","App","serviceWorker","InfoContext","createContext","ReadingContext","Index","Show","setShow","ShowReading","setReading","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAO,MAAMC,WAAW,GAACL,KAAK,CAACM,aAAN,EAAlB;AACP,OAAO,MAAMC,cAAc,GAACP,KAAK,CAACM,aAAN,EAArB;;AACP,MAAME,KAAK,GAAC,MAAI;AAAA,oBACSP,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,QACLQ,IADK;AAAA,QACAC,OADA;;AAAA,qBAEmBT,QAAQ,CAAC,OAAD,CAF3B;AAAA;AAAA,QAELU,WAFK;AAAA,QAEOC,UAFP;;AAGhB,SACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,CAACD,WAAD,EAAaC,UAAb,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACH,IAAD,EAAMC,OAAN,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,CADJ;AAOC,CAVD;;AAYAR,QAAQ,CAACW,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA;;AACAX,aAAa,CAACY,UAAd","sourcesContent":["import React,{useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nexport const InfoContext=React.createContext();\nexport const ReadingContext=React.createContext();\nconst Index=()=>{\n    const [Show,setShow]=useState(false);\n    const [ShowReading,setReading]=useState(\"close\");\nreturn(\n    <ReadingContext.Provider value={[ShowReading,setReading]}>\n    <InfoContext.Provider value={[Show,setShow]}>\n    <App/>\n    </InfoContext.Provider>\n    </ReadingContext.Provider>\n);\n}\n\nReactDOM.render(<Index/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}