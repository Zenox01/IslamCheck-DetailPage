{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react);\n    global.Choose = mod.exports;\n  }\n})(this, function (exports, _react) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var Choose = function Choose(props) {\n    var foundEl = null;\n    var i = 0;\n\n    if (props.children.length) {\n      var children = props.children;\n\n      for (i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (child.type.name === 'When') {\n          if (child.props.condition) {\n            foundEl = _react2.default.createElement('span', null, child);\n            break;\n          }\n        } else if (child.type.name === 'Otherwise') {\n          if (foundEl === null) {\n            foundEl = _react2.default.createElement('span', null, child);\n            break;\n          }\n        }\n      }\n    }\n\n    return foundEl;\n  };\n\n  Choose.propTypes = {\n    children: function children(props, propName, componentName) {\n      // only allow When and Otherwise child\n      var prop = props[propName];\n      var error = null;\n\n      _react2.default.Children.forEach(prop, function (child) {\n        if (child.type !== 'When' && child.type !== 'Otherwise') {\n          error = new Error('`' + componentName + '` children should be of type `When` or `Otherwise`');\n        }\n      });\n    }\n  };\n  exports.default = Choose;\n});","map":null,"metadata":{},"sourceType":"script"}