{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Zain\\\\Desktop\\\\Detail-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zain\\\\Desktop\\\\Detail-app\\\\src\\\\Main.js\";\nimport React, { useContext } from \"react\";\nimport Info from \"./SurahInfo\";\nimport { InfoContext } from \"./index\";\nimport Reading from \"./Reading\";\nimport Body from \"./SurahBody\";\nimport { If, Choose, When, Otherwise } from 'react-control-statements';\n\nfunction Main() {\n  const _useContext = useContext(InfoContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        Status = _useContext2[0];\n\n  const test1 = \"open\";\n  return React.createElement(React.Fragment, null, Status && React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(If, {\n    condition: test1 === \"open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(If, {\n    condition: test1 === \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Reading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n}\n\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\Zain\\Desktop\\Detail-app\\src\\Main.js"],"names":["React","useContext","Info","InfoContext","Reading","Body","If","Choose","When","Otherwise","Main","Status","test1"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,EAAT,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,SAA1B,QAA2C,0BAA3C;;AAEA,SAASC,IAAT,GAAe;AAAA,sBACET,UAAU,CAACE,WAAD,CADZ;AAAA;AAAA,QACNQ,MADM;;AAEb,QAAMC,KAAK,GAAC,MAAZ;AACA,SACC,0CACCD,MAAM,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAGW,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEC,KAAK,KAAG,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAHX,EAMW,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEA,KAAK,KAAG,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANX,CADD;AAcC;;AAED,eAAeF,IAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Info from \"./SurahInfo\";\r\nimport {InfoContext} from \"./index\";\r\nimport Reading from \"./Reading\";\r\nimport Body from \"./SurahBody\";\r\nimport { If,Choose, When, Otherwise } from 'react-control-statements';\r\n\r\nfunction Main(){\r\n  const [Status]=useContext(InfoContext);\r\n  const test1=\"open\";\r\n  return (\r\n   <>\r\n   {Status && <Info/>}\r\n            \r\n              <If condition={test1===\"open\"}>\r\n              <Body/>\r\n              </If>\r\n              <If condition={test1===\"close\"}>\r\n              <Reading/>\r\n             </If>\r\n             \r\n            </>\r\n            );\r\n\r\n  }\r\n\r\n  export default Main;"]},"metadata":{},"sourceType":"module"}