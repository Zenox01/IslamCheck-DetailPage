{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'prop-types'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('prop-types'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes);\n    global.For = mod.exports;\n  }\n})(this, function (exports, _react, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var For = function For(thisProps) {\n    var each = thisProps.each,\n        of = thisProps.of,\n        children = thisProps.children; // children is just text element\n\n    if (typeof children === 'string') {\n      return _react2.default.createElement('span', null, of.map(function (item) {\n        var keys = children.split('.');\n\n        if (keys[0] === each) {\n          keys.shift(); // https://stackoverflow.com/questions/8051975\n\n          var newVal = keys.reduce(function (a, b) {\n            return a[b];\n          }, item);\n          console.log(newVal);\n\n          if (newVal) {\n            return newVal;\n          }\n\n          return null;\n        }\n\n        return item;\n      }));\n    } else if (children && (typeof children === 'undefined' ? 'undefined' : _typeof(children)) === 'object') {\n      var props = children.props; // mapping data -> item\n\n      var ParentEl = of.map(function (item) {\n        // recursive function\n        var ChildEl = function ChildEl(children1) {\n          return _react2.default.Children.map(children1, function (child) {\n            var type = child.type,\n                props = child.props;\n            var newProps = {};\n\n            if (typeof child === 'string') {\n              var keys = child.split('.');\n\n              if (keys[0] === each) {\n                keys.shift();\n\n                if (item[keys]) {\n                  return item[keys];\n                }\n\n                return null;\n              }\n\n              return child;\n            } else {\n              // eslint-disable-line no-else-return\n              Object.keys(props).map(function (prop) {\n                var val = props[prop];\n                newProps[prop] = val;\n\n                if (typeof val === 'string') {\n                  var _keys = val.split('.');\n\n                  if (_keys[0] === each) {\n                    _keys.shift(); // https://stackoverflow.com/questions/8051975\n\n\n                    if (_keys.length) {\n                      var newVal = _keys.reduce(function (a, b) {\n                        if (a) {\n                          return a[b];\n                        }\n                      }, item);\n\n                      if (newProps[prop]) {\n                        newProps[prop] = newVal;\n                      }\n                    }\n                  }\n                }\n              });\n            }\n\n            if (props && props.children && _typeof(props.children) === 'object') {\n              return _react2.default.createElement(type, newProps, [].concat(_toConsumableArray(ChildEl(props.children, item))));\n            }\n\n            return _react2.default.createElement(type, newProps);\n          });\n        };\n\n        return ChildEl(children, item);\n      });\n      return _react2.default.createElement('span', null, ' ', ParentEl, ' ');\n    } else {\n      // eslint-disable-line no-else-return\n      return null;\n    }\n  };\n\n  For.propTypes = {\n    each: _propTypes2.default.string.isRequired,\n    of: _propTypes2.default.array.isRequired,\n    children: _propTypes2.default.any.isRequired\n  };\n  exports.default = For;\n});","map":null,"metadata":{},"sourceType":"script"}